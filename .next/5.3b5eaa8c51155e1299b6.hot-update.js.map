{"version":3,"file":"5.3b5eaa8c51155e1299b6.hot-update.js","sources":["webpack:///components/Header.js","webpack:///./node_modules/@material-ui/core/Button/index.js","webpack:///pages/create.js"],"sourcesContent":["import Link from 'next/link'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n//import \"typeface-lobster\";\r\n\r\nconst linkStyle = {\r\n  marginRight: 15,\r\n  border: '2px solid #DDD'\r\n}\r\n\r\nconst Header = () => {\r\n    return(\r\n    <div>\r\n    \t<h1 align=\"center\">Fridgehunters</h1><style jsx>{`\r\n\r\n        h1 {\r\n          font-family: \"Lobster\", Times, serif;\r\n          font-size: 54px\r\n        }\r\n        \r\n      `}</style>\r\n      <AppBar position=\"static\">\r\n        <Toolbar  style={{justifyContent: 'center'}}>\r\n        <div>\r\n          <Link href=\"/hot\">\r\n            <Button style={{ fontWeight: \"bold\", fontSize: \"16px\"  }}>HOT</Button>\r\n          </Link>\r\n\r\n          <Link href=\"/\">\r\n            <Button style={{ fontWeight: \"bold\", fontSize: \"16px\"  }}>HOME</Button>\r\n          </Link>\r\n\r\n          <Link href=\"/create\">\r\n            <Button style={{ fontWeight: \"bold\", fontSize: \"16px\" }}>CREATE</Button>\r\n          </Link>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\n\n\n// WEBPACK FOOTER //\n// components/Header.js","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Button.default;\n  }\n});\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@material-ui/core/Button/index.js\n// module id = ./node_modules/@material-ui/core/Button/index.js\n// module chunks = 4 5 6","import { withRouter } from 'next/router'\r\nimport Layout from '../components/MyLayout.js'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport urlname from '../components/urlname.js'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nconst querystring = require('querystring');\r\n\r\n\r\nclass Creator extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      listOpen: false,\r\n      textValue: \"\",\r\n      ingredtextlist: [],\r\n      name: \"\",\r\n      description: \"\",\r\n      buttonInfo: \"Add recipe!\",\r\n      errorInfo: \"\",\r\n      ingredfoundlist: []\r\n    }\r\n\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n    this.RemoveIngred = this.RemoveIngred.bind(this);\r\n    this.addIngredient = this.addIngredient.bind(this);\r\n    this.changeName = this.changeName.bind(this);\r\n    this.changeDescription = this.changeDescription.bind(this);\r\n    this.createRecipe = this.createRecipe.bind(this);\r\n  }\r\n\r\n  showMenu(event){\r\n    this.setState({\r\n      buttonInfo: \"Add recipe!\",\r\n      errorInfo: \"\"\r\n    })\r\n    if(this.state.listOpen){\r\n      this.setState({ textValue: event.currentTarget.value.toLowerCase()});  \r\n    }\r\n    else{\r\n        this.setState({\r\n          textValue: event.currentTarget.value.toLowerCase(),\r\n          listOpen: true\r\n        },  () => {\r\n          document.addEventListener('click', this.closeMenu);\r\n        })\r\n    }\r\n\r\n    this.setState({\r\n        \r\n        ingredfoundlist: [\"Loading...\"]\r\n    });\r\n    fetch(urlname + \"/ingredients?uname=\" + encodeURI(event.currentTarget.value.toLowerCase())).then(response => response.text()).then(data => {\r\n      console.log(\"Show data fetched. Count: \" + data)\r\n      var datalist = data.split(\",\");\r\n      if(data == \"\"){\r\n        this.setState({\r\n        \r\n            ingredfoundlist: []\r\n        });\r\n      }\r\n      else{\r\n        this.setState({\r\n        \r\n            ingredfoundlist: datalist\r\n        });\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  RemoveIngred(event){\r\n    var index = +(this.state.ingredtextlist.indexOf(event.target.getAttribute('key2')));\r\n    var changedArray = this.state.ingredtextlist.slice();\r\n    changedArray.splice(index, 1);\r\n    this.setState((prevState, props) => {return {ingredtextlist: changedArray}})\r\n  }\r\n\r\n  addIngredient(event){\r\n    event.persist();\r\n    var custom = event.currentTarget.getAttribute('customtext')\r\n    var tmparr = this.state.ingredtextlist.slice().concat([custom]);\r\n\r\n    if(event.currentTarget.id == \"addButton\"){\r\n      if(this.state.textValue == \"\"){\r\n        return;\r\n      }\r\n\r\n      if(this.state.ingredtextlist.findIndex(ing => ing == this.state.textValue) == -1){\r\n        //this.setState((prevState, props) => {return {ingredlist: prevState.ingredlist.concat([(\r\n          //<h1 onClick={this.RemoveIngred} key={this.state.textValue}>{this.state.textValue}</h1>\r\n        //)])}})\r\n\r\n        tmparr = this.state.ingredtextlist.slice().concat([this.state.textValue]);\r\n\r\n        this.setState((prevState, props) => {return {ingredtextlist: tmparr}})\r\n      }\r\n\r\n      \r\n    }\r\n\r\n    else{\r\n      this.setState({ listOpen: false }, () => {\r\n            document.removeEventListener('click', this.closeMenu);\r\n        });  \r\n        //if(this.state.ingredlist.findIndex(ing => ing.key == event.target.getAttribute('customtext')) == -1){\r\n        if(this.state.ingredtextlist.findIndex(ing => ing == custom) == -1){\r\n        //this.setState((prevState, props) => {return {ingredlist: prevState.ingredlist.concat([(\r\n        //<h1 onClick={this.RemoveIngred} key={event.target.getAttribute('customtext')}>{event.target.getAttribute('customtext')}</h1>\r\n        //)])}})\r\n\r\n        this.setState((prevState, props) => {return {ingredtextlist: tmparr}})\r\n      }\r\n      \r\n      \r\n    }\r\n  }\r\n\r\n  closeMenu(event) {\r\n    \r\n      if (!this.dropdownMenu.contains(event.target)) {\r\n        \r\n        this.setState({ listOpen: false }, () => {\r\n          document.removeEventListener('click', this.closeMenu);\r\n        });  \r\n        \r\n      }\r\n  }\r\n\r\n  changeName(event){\r\n    this.setState({\r\n      buttonInfo: \"Add recipe!\",\r\n      errorInfo: \"\",\r\n      name: event.currentTarget.value\r\n    })\r\n  }\r\n\r\n  changeDescription(event){\r\n    this.setState({\r\n      buttonInfo: \"Add recipe!\",\r\n      errorInfo: \"\",\r\n      description: event.currentTarget.value\r\n    })\r\n  }\r\n\r\n  createRecipe(){\r\n    this.setState({\r\n      buttonInfo: \"Adding recipe...\"\r\n    })\r\n    if(this.state.name == \"\" || this.state.description == \"\" || this.state.ingredtextlist == []){\r\n      this.setState({\r\n        errorInfo: \"One or more fields is left blank. Try again.\"\r\n      })\r\n      return;\r\n    }\r\n\r\n    var params = {\r\n      uname: this.state.name,\r\n      ulist: this.state.ingredtextlist.toString(),\r\n      udesc: this.state.description\r\n    }\r\n\r\n    var queryAdd = querystring.stringify(params);\r\n\r\n    fetch(urlname + \"/recipes\", {method: 'POST', headers: { 'Content-Type': 'application/json'}, body: JSON.stringify(params)}).then(response => response.text()).then(data => {\r\n      if(data == \"Recipe exists\"){\r\n        this.setState({\r\n          errorInfo: \"Recipe name exists. Try again.\"\r\n        })\r\n      }\r\n      else{\r\n        console.log(\"Added recipe \" + data)\r\n        this.setState({\r\n          buttonInfo: \"Recipe added!\"\r\n        })\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n      <div align=\"center\"><br/><br/>\r\n\r\n      <form name=\"nameForm\" onSubmit={(event) => this.showMenu(event)}>\r\n        <label>\r\n          <h3>Recipe name</h3> \r\n          <TextField  onKeyPress={e => {if (e.key === 'Enter') e.preventDefault();}} onChange={(event) => this.changeName(event)} margin=\"normal\" />\r\n        </label>\r\n      </form>\r\n\r\n      <br/><br/>\r\n\r\n      <form name=\"addForm\" onSubmit={(event) => this.showMenu(event)}>\r\n        <label>\r\n            <h3>Add ingredients</h3>\r\n            <TextField  onKeyPress={e => {if (e.key === 'Enter') e.preventDefault();}} onChange={(event) => this.showMenu(event)} margin=\"normal\" />\r\n        </label>\r\n            \r\n      </form>\r\n\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={this.addIngredient} id=\"addButton\"  style={{ fontFamily: \"Gentium Book Basic\", fontWeight: \"bold\", fontSize: '16px' }}>Pick ingredient</Button>\r\n      \r\n      { \r\n        this.state.listOpen \r\n        ?(\r\n        <div className=\"menu\" ref={(element) => {\r\n          this.dropdownMenu = element;\r\n        }}>\r\n          <List component=\"nav\"  style = {{width: 250}}><Divider />\r\n            {this.state.ingredfoundlist.map((ingred) => (<div key={ingred}>\r\n              <ListItem button onClick={this.addIngredient} customtext={ingred}>\r\n                    <ListItemText primary={ingred} />\r\n                </ListItem>\r\n                <Divider />\r\n                </div>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        )\r\n        :(\r\n        <div><br/></div>\r\n        )\r\n      }\r\n\r\n      \r\n      \r\n      <div class=\"inline\">\r\n      {\r\n        this.state.ingredtextlist.map(ingred => (\r\n          <Button  variant=\"outlined\" onClick={this.RemoveIngred} key={ingred} key2={ingred}>{ingred}</Button>\r\n        )\r\n        )\r\n      }\r\n      </div><br/><br/><br/>\r\n\r\n\r\n      <h3>Enter recipe</h3> \r\n      <TextField  style={{width: 300}} multiline={true} rows={5} onChange={(event) => this.changeDescription(event)} />\r\n\r\n      <br/><br/><br/>\r\n      <h4>{this.state.errorInfo}</h4>\r\n\r\n      <Button variant=\"contained\" style={{fontFamily: \"Montserrat\", fontWeight: \"bold\", fontSize: '20px' }} color=\"primary\" onClick={this.createRecipe}>{this.state.buttonInfo}</Button>\r\n\r\n      </div><style jsx>{`\r\n \r\n\r\n        h3 {\r\n          font-family: \"Gentium Book Basic\", Times, serif;\r\n        }\r\n        \r\n      `}</style>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst First =  (props) => (\r\n  <Layout>\r\n    <Creator/>\r\n  </Layout>\r\n)\r\n\r\nexport default First\n\n\n// WEBPACK FOOTER //\n// pages/create.js"],"mappings":"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","sourceRoot":""}